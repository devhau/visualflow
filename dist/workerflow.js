
  /**
   * @license
   * author: Nguyen Van Hau
   * workerflow.js v0.0.1
   * Released under the MIT license.
   */

var workerflow = (function () {
    'use strict';

    class ViewFlow {
        elView;
        elCanvas = null;
        parent;
        flgDrap = false;
        zoom = 1;
        zoom_max = 1.6;
        zoom_min = 0.5;
        zoom_value = 0.1;
        zoom_last_value = 1;
        canvas_x = 0;
        canvas_y = 0;
        pos_x = 0;
        pos_x_start = 0;
        pos_y = 0;
        pos_y_start = 0;
        mouse_x = 0;
        mouse_y = 0;
        constructor(parent) {
            this.parent = parent;
            this.elView = this.parent.container?.querySelector('.workerflow-desgin .workerflow-view');
            if (this.elView) {
                this.elCanvas = document.createElement('div');
                this.elCanvas.classList.add("workerflow-canvas");
                this.elView.appendChild(this.elCanvas);
                this.elView.tabIndex = 0;
                this.addEvent();
            }
        }
        addEvent() {
            if (!this.elView)
                return;
            /* Mouse and Touch Actions */
            this.elView.addEventListener('mouseup', this.EndMove.bind(this));
            this.elView.addEventListener('mousemove', this.Move.bind(this));
            this.elView.addEventListener('mousedown', this.StartMove.bind(this));
            this.elView.addEventListener('touchend', this.EndMove.bind(this));
            this.elView.addEventListener('touchmove', this.Move.bind(this));
            this.elView.addEventListener('touchstart', this.StartMove.bind(this));
            /* Context Menu */
            this.elView.addEventListener('contextmenu', this.contextmenu.bind(this));
        }
        StartMove(e) {
            this.flgDrap = true;
            console.log("StartMove");
            if (e.type === "touchstart") {
                this.pos_x = e.touches[0].clientX;
                this.pos_x_start = e.touches[0].clientX;
                this.pos_y = e.touches[0].clientY;
                this.pos_y_start = e.touches[0].clientY;
            }
            else {
                this.pos_x = e.clientX;
                this.pos_x_start = e.clientX;
                this.pos_y = e.clientY;
                this.pos_y_start = e.clientY;
            }
        }
        Move(e) {
            if (!this.flgDrap || !this.elCanvas)
                return;
            let e_pos_x = 0;
            let e_pos_y = 0;
            if (e.type === "touchmove") {
                e_pos_x = e.touches[0].clientX;
                e_pos_y = e.touches[0].clientY;
            }
            else {
                e_pos_x = e.clientX;
                e_pos_y = e.clientY;
            }
            console.log("Move");
            let x = this.canvas_x + (-(this.pos_x - e_pos_x));
            let y = this.canvas_y + (-(this.pos_y - e_pos_y));
            // this.dispatch('translate', { x: x, y: y });
            this.elCanvas.style.transform = "translate(" + x + "px, " + y + "px) scale(" + this.zoom + ")";
            if (e.type === "touchmove") {
                this.mouse_x = e_pos_x;
                this.mouse_y = e_pos_y;
            }
        }
        EndMove(e) {
            this.flgDrap = false;
            let e_pos_x = 0;
            let e_pos_y = 0;
            if (e.type === "touchend") {
                e_pos_x = this.mouse_x;
                e_pos_y = this.mouse_y;
            }
            else {
                e_pos_x = e.clientX;
                e_pos_y = e.clientY;
            }
            this.canvas_x = this.canvas_x + (-(this.pos_x - e_pos_x));
            this.canvas_y = this.canvas_y + (-(this.pos_y - e_pos_y));
        }
        contextmenu(e) {
            e.preventDefault();
        }
    }

    class WorkerFlow {
        container;
        View;
        constructor(container) {
            this.container = container;
            this.container.classList.add("workerflow");
            this.container.innerHTML = `
    <div class="workerflow-control">
      <div class="workerflow-control__item" draggable="true">Node 1</div>
    </div>
    <div class="workerflow-desgin">
      <div class="workerflow-items">
        <div class="workerflow-item">Thông tin mới</div>
        <div class="workerflow-item">Thông tin mới123</div>
      </div>
      <div class="workerflow-view">
      </div>
    </div>
    `;
            this.View = new ViewFlow(this);
        }
    }

    return WorkerFlow;

})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
